{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let GlosarioComponent = class GlosarioComponent {\n  constructor() {\n    this.glosario = {\n      'A': ['Abdomen', 'Axila', 'Anatomía'],\n      'B': ['Brazo', 'Boca', 'Biología'],\n      'C': ['Cabeza', 'Cuello', 'Corazón']\n      // Agrega más letras y palabras según tu glosario\n    };\n\n    this.seleccionActual = 'A'; // Letra inicial seleccionada\n    this.informacionLetra = this.glosario[this.seleccionActual]; // Información de la letra seleccionada\n  }\n\n  seleccionarLetra(letra) {\n    this.seleccionActual = letra;\n  }\n  obtenerInformacionLetra() {\n    console.log(this.glosario[this.seleccionActual]);\n    return this.glosario[this.seleccionActual] || [];\n  }\n  slideChanged(event) {\n    const target = event.target;\n    const letraSeleccionada = target.querySelector('.carousel-body')?.textContent?.trim() || '';\n    this.seleccionActual = letraSeleccionada;\n  }\n  obtenerIndiceSlide() {\n    const letras = Object.keys(this.glosario);\n    return letras.indexOf(this.seleccionActual);\n  }\n  cambiarLetraAnterior() {\n    const letras = Object.keys(this.glosario);\n    const indexActual = letras.indexOf(this.seleccionActual);\n    const indiceAnterior = (indexActual - 1 + letras.length) % letras.length;\n    this.seleccionActual = letras[indiceAnterior];\n  }\n  cambiarLetraSiguiente() {\n    const letras = Object.keys(this.glosario);\n    const indexActual = letras.indexOf(this.seleccionActual);\n    const indiceSiguiente = (indexActual + 1) % letras.length;\n    this.seleccionActual = letras[indiceSiguiente];\n  }\n  onSearchChange() {\n    console.log(this.searchText);\n    // Aquí puedes manejar la entrada del usuario\n    // Por ejemplo, puedes realizar una solicitud HTTP para buscar los datos\n  }\n};\n\nGlosarioComponent = __decorate([Component({\n  selector: 'app-glosario',\n  templateUrl: './glosario.component.html',\n  styleUrls: ['./glosario.component.css']\n})], GlosarioComponent);","map":{"version":3,"names":["Component","GlosarioComponent","constructor","glosario","seleccionActual","informacionLetra","seleccionarLetra","letra","obtenerInformacionLetra","console","log","slideChanged","event","target","letraSeleccionada","querySelector","textContent","trim","obtenerIndiceSlide","letras","Object","keys","indexOf","cambiarLetraAnterior","indexActual","indiceAnterior","length","cambiarLetraSiguiente","indiceSiguiente","onSearchChange","searchText","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ladyl\\Documents\\GitHub\\Angular_Medicina\\src\\app\\medicina\\glosario\\glosario.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\ninterface Glosario {\r\n  [key: string]: string[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-glosario',\r\n  templateUrl: './glosario.component.html',\r\n  styleUrls: ['./glosario.component.css']\r\n})\r\nexport class GlosarioComponent {\r\n  glosario: Glosario = {\r\n    'A': ['Abdomen', 'Axila', 'Anatomía'],\r\n    'B': ['Brazo', 'Boca', 'Biología'],\r\n    'C': ['Cabeza', 'Cuello', 'Corazón'],\r\n    // Agrega más letras y palabras según tu glosario\r\n  };\r\n  seleccionActual: string = 'A'; // Letra inicial seleccionada\r\n  informacionLetra: string[] = this.glosario[this.seleccionActual]; // Información de la letra seleccionada\r\n\r\n\r\n  seleccionarLetra(letra: string) {\r\n    this.seleccionActual = letra;\r\n  }\r\n\r\n\r\n\r\n  obtenerInformacionLetra(): string[] {\r\n    console.log(this.glosario[this.seleccionActual])\r\n    return this.glosario[this.seleccionActual] || [];\r\n\r\n  }\r\n\r\n  slideChanged(event: Event) {\r\n    const target = event.target as HTMLDivElement;\r\n    const letraSeleccionada = target.querySelector('.carousel-body')?.textContent?.trim() || '';\r\n    this.seleccionActual = letraSeleccionada;\r\n  }\r\n  obtenerIndiceSlide(): number {\r\n    const letras = Object.keys(this.glosario);\r\n    return letras.indexOf(this.seleccionActual);\r\n  }\r\n\r\n\r\n  cambiarLetraAnterior() {\r\n    const letras = Object.keys(this.glosario);\r\n    const indexActual = letras.indexOf(this.seleccionActual);\r\n    const indiceAnterior = (indexActual - 1 + letras.length) % letras.length;\r\n    this.seleccionActual = letras[indiceAnterior];\r\n  }\r\n\r\n  cambiarLetraSiguiente() {\r\n    const letras = Object.keys(this.glosario);\r\n    const indexActual = letras.indexOf(this.seleccionActual);\r\n    const indiceSiguiente = (indexActual + 1) % letras.length;\r\n    this.seleccionActual = letras[indiceSiguiente];\r\n  }\r\n\r\n  searchText: any;\r\n  onSearchChange() {\r\n    console.log(this.searchText);\r\n    // Aquí puedes manejar la entrada del usuario\r\n    // Por ejemplo, puedes realizar una solicitud HTTP para buscar los datos\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IACL,KAAAC,QAAQ,GAAa;MACnB,GAAG,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC;MACrC,GAAG,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC;MAClC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS;MACnC;KACD;;IACD,KAAAC,eAAe,GAAW,GAAG,CAAC,CAAC;IAC/B,KAAAC,gBAAgB,GAAa,IAAI,CAACF,QAAQ,CAAC,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;EA8CpE;;EA3CEE,gBAAgBA,CAACC,KAAa;IAC5B,IAAI,CAACH,eAAe,GAAGG,KAAK;EAC9B;EAIAC,uBAAuBA,CAAA;IACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAAC,IAAI,CAACC,eAAe,CAAC,CAAC;IAChD,OAAO,IAAI,CAACD,QAAQ,CAAC,IAAI,CAACC,eAAe,CAAC,IAAI,EAAE;EAElD;EAEAO,YAAYA,CAACC,KAAY;IACvB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAwB;IAC7C,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,aAAa,CAAC,gBAAgB,CAAC,EAAEC,WAAW,EAAEC,IAAI,EAAE,IAAI,EAAE;IAC3F,IAAI,CAACb,eAAe,GAAGU,iBAAiB;EAC1C;EACAI,kBAAkBA,CAAA;IAChB,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,QAAQ,CAAC;IACzC,OAAOgB,MAAM,CAACG,OAAO,CAAC,IAAI,CAAClB,eAAe,CAAC;EAC7C;EAGAmB,oBAAoBA,CAAA;IAClB,MAAMJ,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,QAAQ,CAAC;IACzC,MAAMqB,WAAW,GAAGL,MAAM,CAACG,OAAO,CAAC,IAAI,CAAClB,eAAe,CAAC;IACxD,MAAMqB,cAAc,GAAG,CAACD,WAAW,GAAG,CAAC,GAAGL,MAAM,CAACO,MAAM,IAAIP,MAAM,CAACO,MAAM;IACxE,IAAI,CAACtB,eAAe,GAAGe,MAAM,CAACM,cAAc,CAAC;EAC/C;EAEAE,qBAAqBA,CAAA;IACnB,MAAMR,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,QAAQ,CAAC;IACzC,MAAMqB,WAAW,GAAGL,MAAM,CAACG,OAAO,CAAC,IAAI,CAAClB,eAAe,CAAC;IACxD,MAAMwB,eAAe,GAAG,CAACJ,WAAW,GAAG,CAAC,IAAIL,MAAM,CAACO,MAAM;IACzD,IAAI,CAACtB,eAAe,GAAGe,MAAM,CAACS,eAAe,CAAC;EAChD;EAGAC,cAAcA,CAAA;IACZpB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoB,UAAU,CAAC;IAC5B;IACA;EACF;CACD;;AAtDY7B,iBAAiB,GAAA8B,UAAA,EAL7B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWjC,iBAAiB,CAsD7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}